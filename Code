# Serial
<!doctype html>

	<head>

		<style>

			/* CSS comes here */

			body {

			    font-family: arial;

			}

			button {

			    padding:15px;

			    background-color:#910c69;

			    color: #ffffff;

			    border: 0px;

			    cursor:pointer;

			    border-radius: 5px;

			}

			#output {

			    background-color:#a2afaf;

			    padding:10px;

			    width: 100%;

			    margin-top:20px;

			    line-height:30px;

			}

			.hide {

			    display:none;

			}

			.show {

			    display:block;

			}

		</style>

		<title>speach to text</title>

	</head>

	<body>

		<h2>speach to text</h2>

        <p>please speak...</p>

        <button class="button-71" role="button" id="button" >click to start</button><br>

		<p><button type="button" onclick="runSpeechRecognition()">speak</button> &nbsp; <span id="action"></span></p>

        <div id="output" class="hide"></div>

		<script>

document.querySelector('#button').addEventListener('click', async () => {

	

	port = await navigator.serial.requestPort();

	await port.open({ baudRate: 9600 });

});

	function stt(){

		// get output div reference

		var output = document.getElementById("output");

		// get action element reference

		var action = document.getElementById("action");

		// new speech recognition object

		var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;

		var recognition = new SpeechRecognition();            

		// This runs when the speech recognition service starts

		recognition.onstart = function() {

			action.innerHTML = "<small>listening, please speak...</small>";

		};

		

		recognition.onspeechend = function() {

			action.innerHTML = "<small>stopped listening</small>";

			recognition.stop();

		}

	  

		// This runs when the speech recognition service returns result

		recognition.onresult = function(event) {

			var transcript = event.results[0][0].transcript;

			output.innerHTML = transcript ;

			output.classList.remove("hide");

			

			if(transcript == "يمين"){

				console.log(transcript);

				send("right");

			}else if(transcript == "يسار"){

				console.log(transcript);

				send("left");					

			}

			

			

		};		

		 // start recognition

		 recognition.start();

	}		

	async function send(text){

		const textEncoder = new TextEncoderStream();

		const writableStreamClosed = textEncoder.readable.pipeTo(port.writable);

		const writer = textEncoder.writable.getWriter();

		await writer.write(text);

		writer.close();

		await writableStreamClosed;			

	}

	

/* JS comes here */

document.querySelector('#button').addEventListener('click', async () => {

port = await navigator.serial.requestPort();

await port.open({ baudRate: 9600 });

});

function stt(){

	// get output div reference

	var output = document.getElementById("output");

	// get action element reference

	var action = document.getElementById("action");

	// new speech recognition object

	var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;

	var recognition = new SpeechRecognition();            

	// This runs when the speech recognition service starts

	recognition.onstart = function() {

		action.innerHTML = "<small>listening, please speak...</small>";

	};

	

	recognition.onspeechend = function() {

		action.innerHTML = "<small>stopped listening</small>";

		recognition.stop();

	}

  

	// This runs when the speech recognition service returns result

	recognition.onresult = function(event) {

		var transcript = event.results[0][0].transcript;

		output.innerHTML = transcript ;

		output.classList.remove("hide");

		

		if(transcript == "يمين"){

			console.log(transcript);

			send("right");

		}else if(transcript == "يسار"){

			console.log(transcript);

			send("left");					

		}

		

		

	};		

	 // start recognition

	 recognition.start();

}		

async function send(text){

	const textEncoder = new TextEncoderStream();

	const writableStreamClosed = textEncoder.readable.pipeTo(port.writable);

	const writer = textEncoder.writable.getWriter();

	await writer.write(text);

	writer.close();

	await writableStreamClosed;			

}

			/* JS comes here */

		    function runSpeechRecognition() {

		        // get output div reference

		        var output = document.getElementById("output");

		        // get action element reference

		        var action = document.getElementById("action");

                // new speech recognition object

                var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;

                var recognition = new SpeechRecognition();

            

                // This runs when the speech recognition service starts

                recognition.onstart = function() {

                    action.innerHTML = "<small>listening, please speak...</small>";

                };

                

                recognition.onspeechend = function() {

                    action.innerHTML = "<small>stopped listening, hope you are done...</small>";

                    recognition.stop();

                }

              

                // This runs when the speech recognition service returns result

                recognition.onresult = function(event) {

                    var transcript = event.results[0][0].transcript;

                    var confidence = event.results[0][0].confidence;

                    output.innerHTML = "<b>Text:</b> " + transcript + "<br/> <b>Confidence:</b> " + confidence*100+"%";

                    output.classList.remove("hide");

                };

              

                 // start recognition

                 recognition.start();

	        }

		</script>

	</body>

</html>
